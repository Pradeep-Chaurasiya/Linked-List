/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode A, ListNode B) {
        
        ListNode temp1 = A;
        ListNode temp2 = B;
        int carry = 0, num1 = 0, num2 = 0;
        
        ListNode head = null;
        
        ListNode prev = null;
        
        while(temp1!=null && temp2!=null){
            num1 = temp1.val;
            num2 = temp2.val;
            
            int rem = (carry + num1 + num2)%10;
           
            ListNode node = new ListNode(rem);
            if(head == null){
                node.next = head;
                head = node; 
                prev = head;
            }
            else{
                prev.next = node;
                // node.next = null;
            }
            prev = node;
            
            carry = (carry + num1 + num2)/10;
                
            temp1 = temp1.next;
            temp2 = temp2.next;
          
        }
        
        while(temp1 != null){
            num1 = temp1.val;
            int rem = (carry+ num1)%10;
            
            ListNode node = new ListNode(rem);
            prev.next = node;
            // node.next = null;
            prev = node;
            carry = (carry+num1)/10;
            temp1 = temp1.next;
            
        }
        
        while(temp2 != null){
            num2 = temp2.val;
            int rem = (carry+ num2)%10;
            
            ListNode node = new ListNode(rem);
            prev.next = node;
            // node.next = null;
            prev = node;
            carry = (carry + num2)/10;
            temp2 = temp2.next;
            
        }
        
        if(carry != 0){
            ListNode node = new ListNode(carry);
            prev.next = node;
            // node.next = null;
        }
        return head;
    
    }
}
